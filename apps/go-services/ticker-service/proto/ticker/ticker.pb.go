// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: ticker.proto

package ticker

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TickerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TickerRequest) Reset() {
	*x = TickerRequest{}
	mi := &file_ticker_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TickerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickerRequest) ProtoMessage() {}

func (x *TickerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticker_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickerRequest.ProtoReflect.Descriptor instead.
func (*TickerRequest) Descriptor() ([]byte, []int) {
	return file_ticker_proto_rawDescGZIP(), []int{0}
}

func (x *TickerRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type TickerUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exchange      string                 `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Symbol        string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Price         string                 `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`
	Volume        string                 `protobuf:"bytes,4,opt,name=volume,proto3" json:"volume,omitempty"`
	EventTime     int64                  `protobuf:"varint,5,opt,name=eventTime,proto3" json:"eventTime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TickerUpdate) Reset() {
	*x = TickerUpdate{}
	mi := &file_ticker_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TickerUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickerUpdate) ProtoMessage() {}

func (x *TickerUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_ticker_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickerUpdate.ProtoReflect.Descriptor instead.
func (*TickerUpdate) Descriptor() ([]byte, []int) {
	return file_ticker_proto_rawDescGZIP(), []int{1}
}

func (x *TickerUpdate) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *TickerUpdate) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *TickerUpdate) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *TickerUpdate) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

func (x *TickerUpdate) GetEventTime() int64 {
	if x != nil {
		return x.EventTime
	}
	return 0
}

var File_ticker_proto protoreflect.FileDescriptor

const file_ticker_proto_rawDesc = "" +
	"\n" +
	"\fticker.proto\x12\x06ticker\"'\n" +
	"\rTickerRequest\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\"\x8e\x01\n" +
	"\fTickerUpdate\x12\x1a\n" +
	"\bexchange\x18\x01 \x01(\tR\bexchange\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\x12\x14\n" +
	"\x05price\x18\x03 \x01(\tR\x05price\x12\x16\n" +
	"\x06volume\x18\x04 \x01(\tR\x06volume\x12\x1c\n" +
	"\teventTime\x18\x05 \x01(\x03R\teventTime2N\n" +
	"\rTickerService\x12=\n" +
	"\fStreamTicker\x12\x15.ticker.TickerRequest\x1a\x14.ticker.TickerUpdate0\x01B\x0eZ\fproto/tickerb\x06proto3"

var (
	file_ticker_proto_rawDescOnce sync.Once
	file_ticker_proto_rawDescData []byte
)

func file_ticker_proto_rawDescGZIP() []byte {
	file_ticker_proto_rawDescOnce.Do(func() {
		file_ticker_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ticker_proto_rawDesc), len(file_ticker_proto_rawDesc)))
	})
	return file_ticker_proto_rawDescData
}

var file_ticker_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_ticker_proto_goTypes = []any{
	(*TickerRequest)(nil), // 0: ticker.TickerRequest
	(*TickerUpdate)(nil),  // 1: ticker.TickerUpdate
}
var file_ticker_proto_depIdxs = []int32{
	0, // 0: ticker.TickerService.StreamTicker:input_type -> ticker.TickerRequest
	1, // 1: ticker.TickerService.StreamTicker:output_type -> ticker.TickerUpdate
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_ticker_proto_init() }
func file_ticker_proto_init() {
	if File_ticker_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ticker_proto_rawDesc), len(file_ticker_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ticker_proto_goTypes,
		DependencyIndexes: file_ticker_proto_depIdxs,
		MessageInfos:      file_ticker_proto_msgTypes,
	}.Build()
	File_ticker_proto = out.File
	file_ticker_proto_goTypes = nil
	file_ticker_proto_depIdxs = nil
}
